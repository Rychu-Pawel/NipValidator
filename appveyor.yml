version: 1.0.{build}
image: Visual Studio 2017
configuration: Release
environment:
  SONAR_APIKEY:
    secure: DUCuBgLmhR6jEJEm0n480wMqRFLsCLfhucK9zqPzbxmWg6Dxl9IS3rehXprs8jTn
  GITHUB_APIKEY:
    secure: Fm1wTD6ZfeyTaNs18JrX5lgcsWQmoS6y9diMvJhZl0dxDd/Jw63qvcAm93/pAvFy
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: $(appveyor_build_version)
  package_version: $(appveyor_build_version)
  assembly_version: $(appveyor_build_version)
  file_version: $(appveyor_build_version)
  informational_version: $(appveyor_build_version)
init:
- ps: choco install msbuild-sonarqube-runner -y
- ps: choco install opencover -y
install:
- ps: New-Item .\reports -ItemType directory 
- ps: dotnet add .\tests\NipValidatorTests\NipValidatorTests.csproj package xunit.runner.utility 
- ps: dotnet restore .\NipValidator.sln
before_build:
- ps: >- 
    if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
        SonarQube.Scanner.MSBuild.exe begin /d:sonar.organization="rychu-pawel-github" /k:NipValidator /d:sonar.login=$env:SONAR_APIKEY /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.analysis.mode=preview /d:sonar.github.oauth=$env:GITHUB_APIKEY /d:sonar.github.repository=$env:APPVEYOR_REPO_NAME /d:sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.cs.opencover.reportsPaths=".\Reports\OpenCover.xml"
    }
    elseif ($env:APPVEYOR_REPO_BRANCH -eq "develop") {
        SonarQube.Scanner.MSBuild.exe begin /d:sonar.organization="rychu-pawel-github" /k:NipValidator /d:sonar.login=$env:SONAR_APIKEY /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.branch.name="develop" /d:sonar.branch.target="master" /d:sonar.cs.opencover.reportsPaths=".\Reports\OpenCover.xml"
    }
    elseif ($env:APPVEYOR_REPO_BRANCH -eq "master") {
        SonarQube.Scanner.MSBuild.exe begin /d:sonar.organization="rychu-pawel-github" /k:NipValidator /d:sonar.login=$env:SONAR_APIKEY /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths=".\Reports\OpenCover.xml"
    }
    elseif ($env:APPVEYOR_REPO_BRANCH.StartsWith("release", "CurrentCultureIgnoreCase") -or $env:APPVEYOR_REPO_BRANCH.StartsWith("hotfix", "CurrentCultureIgnoreCase")) {
        SonarQube.Scanner.MSBuild.exe begin /d:sonar.organization="rychu-pawel-github" /k:NipValidator /d:sonar.login=$env:SONAR_APIKEY /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.branch.target="master" /d:sonar.cs.opencover.reportsPaths=".\Reports\OpenCover.xml"
    }
    else {
        SonarQube.Scanner.MSBuild.exe begin /d:sonar.organization="rychu-pawel-github" /k:NipValidator /d:sonar.login=$env:SONAR_APIKEY /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.branch.target="develop" /d:sonar.cs.opencover.reportsPaths=".\Reports\OpenCover.xml"
    }
build_script:
- ps: dotnet build .\NipValidator.sln -c Release
test_script:
- ps: dotnet build .\NipValidator.sln /p:DebugType=Full
- ps: OpenCover.Console.exe -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"test .\tests\NipValidatorTests\NipValidatorTests.csproj --logger:trx --no-build" -filter:"+[*]*" -oldStyle -register:user -output:".\Reports\OpenCover.xml"
after_test:
- ps: SonarQube.Scanner.MSBuild.exe end /d:sonar.login=$env:SONAR_APIKEY
artifacts:
- path: .\src\NipValidator\bin\Release\Rychusoft.Validators.NipValidator.*.nupkg
  name: NipValidator_nuget_package
deploy:
- provider: NuGet
  api_key:
    secure: zC91fFY1joZMkDXOAgrK/3jppgEntX9lWV8wtQr1Da8hENFmY9emqRqgaBLyGlg3
  artifact: NipValidator_nuget_package
  on:
    branch: doNotDeployForNow
notifications:
- provider: GitHubPullRequest
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false